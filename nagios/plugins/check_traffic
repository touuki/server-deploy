#!/bin/bash
#This file is handled by puppet nagios module. Please do not edit this file manually

sar=`which sar 2>/dev/null`
bc=`which bc 2>/dev/null`

function help {
echo -e "\n\tThis plugin shows the traffic of the specified interface, using the sar external program.\n\tIt prints inbound Kbps traffic and outbound Kbps traffic.\n\n$0:\n\t-i <interface>\t\tInterface to be checked (eg. eth0)\n\t-c <read>,<wrtn>\tSets the CRITICAL level for inbound Kbps traffic and outbound Kbps traffic, respectively\n\t-w <read>,<wrtn>\tSets the WARNING level for inbound Kbps traffic and outbound Kbps traffic, respectively\n"
        exit -1
}

# Ensuring we have the needed tools:
( [ ! -f $sar ] || [ ! -f $bc ] ) && \
        ( echo "ERROR: You must have sar and bc installed in order to run this plugin" && exit -1 )

# Getting parameters:
while getopts "i:w:c:h" OPT; do
        case $OPT in
                "i") interface=$OPTARG;;
                "w") warning=$OPTARG;;
                "c") critical=$OPTARG;;
                "h") help;;
        esac
done

# Adjusting the three warn and crit levels:
crit_read=`echo $critical | cut -d, -f1`
crit_written=`echo $critical | cut -d, -f2`
warn_read=`echo $warning | cut -d, -f1`
warn_written=`echo $warning | cut -d, -f2`

# Checking parameters:
#[ ! -b "/dev/$disk" ] && echo "ERROR: Device incorrectly specified" && help

( [ "$warn_read" == "" ] || [ "$warn_written" == "" ] ||\
  [ "$crit_read" == "" ] || [ "$crit_written" == "" ] ) &&
        echo "ERROR: You must specify all warning and critical levels" && help

( [[ "$warn_read" -ge  "$crit_read" ]] || \
  [[ "$warn_written" -ge  "$crit_written" ]] ) && \
  echo "ERROR: critical levels must be highter than warning levels" && help


# Doing the actual check:
sar_read=`$sar -n DEV 2 1 | grep $interface | head -n1`
kbread=`echo $sar_read |awk '{print $6}'`
kbwritten=`echo $sar_read |awk '{print $7}'`
kbread=`echo "scale=2;${kbread}*8" | bc`
kbwritten=`echo "scale=2;${kbwritten}*8" | bc`
kbtotal=`echo "scale=2;${kbread}+${kbwritten}" | bc`

# Comparing the result and setting the correct level:
if ( [ "`echo "$kbread >= $crit_read" | bc`" == "1" ] || \
     [ "`echo "$kbwritten >= $crit_written" | bc`" == "1" ] ); then
        msg="CRITICAL"
        status=2
else if ( [ "`echo "$kbread >= $warn_read" | bc`" == "1" ] || \
          [ "`echo "$kbwritten >= $warn_written" | bc`" == "1" ] ); then
                msg="WARNING"
                status=1
     else
        msg="OK"
        status=0
     fi
fi

# Printing the results:
echo "$msg - The Traffic In is ${kbread}Kbps, Out is ${kbwritten}Kbps, Total is ${kbtotal}Kbps |In=${kbread}Kbps;$warn_read;$crit_read;0;0 Out=${kbwritten}Kbps;$warn_written;$crit_written;0;0"

# Bye!
exit $status
